apiVersion: v1
kind: List
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: demo
      name: demo
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: demo
      strategy: {}
      template:
        metadata:
          labels:
            app: demo
        spec:
          serviceAccountName: spring-cloud-kubernetes-configuration-watcher
          containers:
          - image: com.example/demo:0.0.1-SNAPSHOT
            name: demo
            env:
#              - name: SPRING_PROFILES_ACTIVE
#                value: "prod"
              - name: logging.level.org.springframework.cloud.kubernetes
                value: "DEBUG"
            volumeMounts:
              - name: config-volume
                mountPath: /etc/config
          volumes:
            - name: config-volume
              configMap:
                name: demo
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: spring-cloud-kubernetes-configuration-watcher-deployment
    spec:
      selector:
        matchLabels:
          app: spring-cloud-kubernetes-configuration-watcher
      template:
        metadata:
          labels:
            app: spring-cloud-kubernetes-configuration-watcher
        spec:
          serviceAccountName: spring-cloud-kubernetes-configuration-watcher
          containers:
            - name: spring-cloud-kubernetes-configuration-watcher
              image: springcloud/spring-cloud-kubernetes-configuration-watcher:3.0.4
              imagePullPolicy: IfNotPresent
              readinessProbe:
                httpGet:
                  port: 8888
                  path: /actuator/health/readiness
              livenessProbe:
                httpGet:
                  port: 8888
                  path: /actuator/health/liveness
              ports:
                - containerPort: 8888
              env:
                - name: SPRING_CLOUD_KUBERNETES_RELOAD_NAMESPACES_0
                  value: "default"
                - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_KUBERNETES_CONFIGURATION_WATCHER
                  value: DEBUG
                - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_KUBERNETES_CLIENT_CONFIG_RELOAD
                  value: DEBUG
                - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CLOUD_KUBERNETES_COMMONS_CONFIG_RELOAD
                  value: DEBUG
                - name: SPRING_CLOUD_KUBERNETES_CONFIGURATION_WATCHER_REFRESHDELAY
                  value: "5000"

---
apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: demo
      name: demo
    spec:
      ports:
      - name: 8080-8080
        port: 8080
        protocol: TCP
        targetPort: 8080
      selector:
        app: demo
      type: LoadBalancer
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: spring-cloud-kubernetes-configuration-watcher
      name: spring-cloud-kubernetes-configuration-watcher
    spec:
      ports:
        - name: http
          port: 8888
          targetPort: 8888
      selector:
        app: spring-cloud-kubernetes-configuration-watcher
      type: ClusterIP
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: demo
  labels:
    spring.cloud.kubernetes.config: "true"
  annotations:
    spring.cloud.kubernetes.configmap.apps: "demo"
data:
  application.yml: |-
    app.greeting: "1"
---
apiVersion: v1
kind: List
items:
  - kind: Role
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: app-namespace-reader
    rules:
      - apiGroups: [""]
        resources: ["configmaps", "secrets"]
        verbs: ["get", "list", "watch"]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: namespace-reader
    rules:
      - apiGroups: [ "", "extensions", "apps" ]
        resources: [ "configmaps", "pods", "services", "endpoints", "secrets" ]
        verbs: [ "get", "list", "watch" ]
---
apiVersion: v1
kind: List
items:
  - kind: RoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: namespace-reader-binding
    subjects:
      - kind: ServiceAccount
        name: default
        apiGroup: ""
    roleRef:
      kind: Role
      name: app-namespace-reader
      apiGroup: ""
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app: spring-cloud-kubernetes-configserver
      name: spring-cloud-kubernetes-configserver:view
    subjects:
      - kind: ServiceAccount
        name: spring-cloud-kubernetes-configuration-watcher
    roleRef:
      kind: Role
      name: namespace-reader
      apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: spring-cloud-kubernetes-configuration-watcher
  name: spring-cloud-kubernetes-configuration-watcher